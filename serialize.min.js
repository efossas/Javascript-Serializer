function serialize(value){switch(typeof value){case "function":var func=value.toString();if(func.search(/\{[^'"`]+\[native code\][^'"`]+\}/g)>-1){if(window[value.name]===value){return value.name}else{return undefined}}else{return func}
case "object":if(value===null)return null;if(typeof value[Symbol.iterator]==="function"){let cstr='[';for(index of value){let result=serialize(index);cstr+=result+','}
if(cstr.length===1){cstr=cstr+']'}else{cstr=cstr.substr(0,cstr.length-1)+']'}
if(value.__proto__.constructor.name==="Array")return cstr;return'new '+value.__proto__.constructor.name+'('+cstr+')'}
if(value instanceof RegExp)return String(value);var valString=value.toString();if(valString.search(/\[.*\]/g)===-1){var arg;if(valString.search(/^[\w]*Error:/g)>-1){arg=valString.substr(valString.indexOf(':')+2,valString.length)}else{arg=String(value)}
return'new '+value.__proto__.constructor.name+"('"+arg+"')"}
if(value.__proto__.constructor.name!=="Object")return"'"+value.toString()+"'";var cstr='{';var success=!0;var properties=Object.getOwnPropertyNames(value).concat(Object.getOwnPropertySymbols(value));for(let i=0;i<properties.length;i++){let key=properties[i];let val=value[key];let result=serialize(val);if(result===undefined){success=!1;break}
cstr+=key+':'+result+','}
if(success){if(cstr.length===1){return cstr+'}'}else{return cstr.substr(0,cstr.length-1)+'}'}}
var windowProps=Object.getOwnPropertyNames(window);for(let i=0;i<windowProps.length;i++){let prop=windowProps[i];if(window[prop]===value){return prop}}
return undefined;case "number":let numString=String(value);if(numString.search(/[a-zA-Z\+]+/g)>-1)return numString;return value;case "symbol":let ss=value.toString();return ss.slice(0,ss.indexOf('('))+"('"+ss.slice(ss.indexOf('(')+1,ss.lastIndexOf(')'))+"')"+ss.slice(ss.lastIndexOf(')')+1,ss.length);case "boolean":return value;default:if(value===undefined)return"undefined";return"'"+value.replace(/'/g,"\\'")+"'"}}
